<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置数据源 连接数据库-->

    <!--1.关联数据库配置文件-->
  <!--  <context:property-placeholder location="/jdbc.properties"/>-->
    <!--jdbc.driver=com.mysql.jdbc.Driver
# 如果使用的是mysql8.0+,增加一个时区的配置; &serverTimezone=Asia/Shanghai
jdbc.url=jdbc:mysql://localhost:3306/crm?useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
jdbc.username=root
jdbc.password=123456-->
    <!--2.连接池
        dbcp: 半自动化操作,不能自动连接
        c3p0: 自动化操作(自动化的加载配置文件,并且可以自动设置到对象中)
        druid:阿里共享连接池 速度快
        hikari:
    -->
 <!--   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/crm?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai" />
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
        &lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        &lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;
        <property name="autoCommitOnClose" value="false"/>
        &lt;!&ndash; 获取连接超时时间 &ndash;&gt;
        <property name="checkoutTimeout" value="10000"/>
        &lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;
        <property name="acquireRetryAttempts" value="2"/>
    </bean>-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">

        <!--set注入为DruidDataSource提供连接数据库信息-->
        <property name="url" value="jdbc:mysql://localhost:3306/crm?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai" /><!--setur（）-->
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="maxActive" value="20"/>

    </bean>
    <!--3.SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--绑定mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--4.配置dao接口扫描包,动态代理的实现了Dao接口可以注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!--要扫描的dao包-->
        <property name="basePackage" value="com.nanhang.settings.dao,com.nanhang.workbench.dao" />
    </bean>

    <!--使用spring的事务管理-->
    <!--声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--连接数据库  指定数据应用-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--transactionManager事务管理器的对象id-->
  <!--  <tx:annotation-driven transaction-manager="transactionManager"/>-->
<tx:annotation-driven transaction-manager="transactionManager"/>
    <context:component-scan base-package="com.nanhang.settings.service"/>
    <context:component-scan base-package="com.nanhang.workbench.service"/>

    <!--4.aop事务支持!-->
    <!--结合aop实现事务的植入-->
    <!--配置事务通知;-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--给哪些方法配置事务-->
        <!--配置事务的传播特性: new propagation=-->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!--配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.mchange.*.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
    </aop:config>
</beans>